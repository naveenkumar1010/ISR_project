# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DHjjow1hZeuGjOaYnLh7RlDWSZ7iwZkq
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

# loading the diabetes dataset to a pandas DataFrame
diabetes_dataset = pd.read_csv('https://isrprojecttt.s3.us-east-1.amazonaws.com/diabetes%20%281%29.csv?response-content-disposition=inline&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEAAaCmFwLXNvdXRoLTEiRzBFAiBypCEW13qyjZc5sthyNw1huh3qprzQfve6EDTpDl%2FzyQIhAJ%2F9WfuxUwDC9lE5kHWsCl27I3dIeOnqrJ6LbM5CngqcKuQCCCkQABoMMzY3ODYwNzY1NTIyIgy7GGtDe6wcXbu7K9wqwQJcGa5fWJQrBbDGH2hKSFMJBfPtpxZP9d9g9%2BSTlmxoUIbYKJrrTn4lFvWjYHbehhIIgjrm%2FyDg0%2BjMWUixIabdHQ5NYN2J5KaKoHNndfjVQ%2FyE1ynjDphJXqKw0d6cfAcCFYIUFTNwZaJVqCKJpi1LmhMQxMEaEHfPr1i1QX5ZPWo1k4jgIUI6Qyw1Va3rrEQSSrmxw7HD%2BwiUc07XKlJlU%2Fjil2kOaGwI2BPUll3sUJ2dQpl9jaHNFsZLPEIq7fE1PHoNuVSzYOjUcel3%2FQeLpoPpar%2FdftG0HafS4fO794HHAXn%2BXPajVYA3sOpHw%2FVqDgCh35aI6BPJYexq1%2B7NyY1mCHLW2l8NoQzVYUBenDMNQ1NF0bBWvnhpHKvxQqmXobP1yx9esczD%2FkOopQXpYoxct%2BwiGXfANNHXLkRdBy4wxc%2FYqQY64AHZta3O%2B9Blbn2e5l4XxOVs23wMuKja1tdNpnMZxTSb0twgvZ5tZleBvBGFlaRzBsVGcrkUDA5aQSEkAzXXtdoEnyBEdF2xHZ%2BbkaIPMbc3NeJ9GZlM8NAh4W1OBtEM2OYcArNziog48Z1b4V2ze84KX1YLkManxlCcV99dHv7fPUKPYYwjvyjvvMJpCF8Dp1oc1pcBGiBdntp97wyCUatOWAHPSIfx5sNs%2B6WbfvTNo2%2BpOxsPl40Jdbc%2FHW3BR3RW5eyD4m8PZ7oZWxz5JGVxsMfGae5HrzPHYdA3A7qB9g%3D%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20231023T080049Z&X-Amz-SignedHeaders=host&X-Amz-Expires=10800&X-Amz-Credential=ASIAVLJRV2NJNT5ETY7W%2F20231023%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=e316dfa2a71fe56d4b1e18cb4a5a2ada110ce95c47b069a8bd358b67ed94c3b4')

# printing the first 5 rows of the dataset
diabetes_dataset.head()

# number of rows and Columns in this dataset
diabetes_dataset.shape

# getting the statistical measures of the data
diabetes_dataset.describe()

diabetes_dataset['Outcome'].value_counts()

diabetes_dataset.groupby('Outcome').mean()

# separating the data and labels
X = diabetes_dataset.drop(columns = 'Outcome', axis=1)
Y = diabetes_dataset['Outcome']

print(X)

print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

classifier = svm.SVC(kernel='linear')

#training the support vector Machine Classifier
classifier.fit(X_train, Y_train)

# accuracy score on the training data
X_train_prediction = classifier.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print('Accuracy score of the training data : ', training_data_accuracy)

# accuracy score on the test data
X_test_prediction = classifier.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print('Accuracy score of the test data : ', test_data_accuracy)

input_data = (5,166,72,19,175,25.8,0.587,51)

# changing the input_data to numpy array
input_data_as_numpy_array = np.asarray(input_data)

# reshape the array as we are predicting for one instance
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = classifier.predict(input_data_reshaped)
print(prediction)

if (prediction[0] == 0):
  print('The person is not diabetic')
else:
  print('The person is diabetic')

import pickle

filename = 'trained_model.sav'
pickle.dump(classifier, open(filename, 'wb'))

# loading the saved model
loaded_model = pickle.load(open('trained_model.sav', 'rb'))

input_data = (5,166,72,19,175,25.8,0.587,51)

# changing the input_data to numpy array
input_data_as_numpy_array = np.asarray(input_data)

# reshape the array as we are predicting for one instance
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = loaded_model.predict(input_data_reshaped)
print(prediction)

if (prediction[0] == 0):
  print('The person is not diabetic')
else:
  print('The person is diabetic')

